// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type ServiceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceRequest) Reset()         { *m = ServiceRequest{} }
func (m *ServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceRequest) ProtoMessage()    {}
func (*ServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_26dd587b3bf36781, []int{0}
}
func (m *ServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRequest.Unmarshal(m, b)
}
func (m *ServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRequest.Marshal(b, m, deterministic)
}
func (dst *ServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRequest.Merge(dst, src)
}
func (m *ServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceRequest.Size(m)
}
func (m *ServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRequest proto.InternalMessageInfo

func (m *ServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type ServiceReply struct {
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceReply) Reset()         { *m = ServiceReply{} }
func (m *ServiceReply) String() string { return proto.CompactTextString(m) }
func (*ServiceReply) ProtoMessage()    {}
func (*ServiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_26dd587b3bf36781, []int{1}
}
func (m *ServiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceReply.Unmarshal(m, b)
}
func (m *ServiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceReply.Marshal(b, m, deterministic)
}
func (dst *ServiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceReply.Merge(dst, src)
}
func (m *ServiceReply) XXX_Size() int {
	return xxx_messageInfo_ServiceReply.Size(m)
}
func (m *ServiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceReply proto.InternalMessageInfo

func (m *ServiceReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceRequest)(nil), "pb.ServiceRequest")
	proto.RegisterType((*ServiceReply)(nil), "pb.ServiceReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YouServiceNameClient is the client API for YouServiceName service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YouServiceNameClient interface {
	// Sends a greeting
	YouServiceFuncName(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceReply, error)
}

type youServiceNameClient struct {
	cc *grpc.ClientConn
}

func NewYouServiceNameClient(cc *grpc.ClientConn) YouServiceNameClient {
	return &youServiceNameClient{cc}
}

func (c *youServiceNameClient) YouServiceFuncName(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceReply, error) {
	out := new(ServiceReply)
	err := c.cc.Invoke(ctx, "/pb.YouServiceName/YouServiceFuncName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YouServiceNameServer is the server API for YouServiceName service.
type YouServiceNameServer interface {
	// Sends a greeting
	YouServiceFuncName(context.Context, *ServiceRequest) (*ServiceReply, error)
}

func RegisterYouServiceNameServer(s *grpc.Server, srv YouServiceNameServer) {
	s.RegisterService(&_YouServiceName_serviceDesc, srv)
}

func _YouServiceName_YouServiceFuncName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YouServiceNameServer).YouServiceFuncName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.YouServiceName/YouServiceFuncName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YouServiceNameServer).YouServiceFuncName(ctx, req.(*ServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YouServiceName_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.YouServiceName",
	HandlerType: (*YouServiceNameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "YouServiceFuncName",
			Handler:    _YouServiceName_YouServiceFuncName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_26dd587b3bf36781) }

var fileDescriptor_service_26dd587b3bf36781 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe1,
	0xe2, 0x0b, 0x86, 0x08, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4,
	0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0x1a, 0x5c, 0x3c,
	0x70, 0x55, 0x05, 0x39, 0x95, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9,
	0x12, 0x4c, 0x60, 0x65, 0x30, 0xae, 0x91, 0x1f, 0x17, 0x5f, 0x64, 0x7e, 0x29, 0x54, 0xb1, 0x5f,
	0x62, 0x6e, 0xaa, 0x90, 0x0d, 0x97, 0x10, 0x42, 0xc4, 0xad, 0x34, 0x2f, 0x19, 0x2c, 0x2a, 0xa4,
	0x57, 0x90, 0xa4, 0x87, 0x6a, 0xb3, 0x94, 0x00, 0x8a, 0x58, 0x41, 0x4e, 0xa5, 0x12, 0x43, 0x12,
	0x1b, 0xd8, 0xa9, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x75, 0x92, 0x52, 0xef, 0xbb, 0x00,
	0x00, 0x00,
}
